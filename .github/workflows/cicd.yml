name: Python CI/CD

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]

jobs:
  test-and-build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        cache: 'pip'

    - name: Install system dependencies
      run: |
        sudo apt-get update -y
        sudo apt-get install -y ffmpeg

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r app/requirements2.txt
        pip install pytest pytest-cov

    - name: Set up OCI configuration
      if: env.OCI_USER_OCID != ''
      run: |
        mkdir -p ~/.oci
        echo "[DEFAULT]" > ~/.oci/config
        echo "user=${{ secrets.OCI_USER_OCID }}" >> ~/.oci/config
        echo "fingerprint=${{ secrets.OCI_FINGERPRINT }}" >> ~/.oci/config
        echo "tenancy=${{ secrets.OCI_TENANCY_OCID }}" >> ~/.oci/config
        echo "region=${{ secrets.OCI_REGION }}" >> ~/.oci/config
        echo "key_file=~/.oci/oci_api_key.pem" >> ~/.oci/config
        echo "${{ secrets.OCI_PRIVATE_KEY }}" > ~/.oci/oci_api_key.pem
        chmod 600 ~/.oci/oci_api_key.pem
      env:
        OCI_USER_OCID: ${{ secrets.OCI_USER_OCID }}

    - name: Run tests
      env:
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        HF_TOKEN: ${{ secrets.HF_TOKEN }}
      run: |
        pytest tests/ --cov=app --cov-report=xml

    - name: Build and tag Docker image
      run: |
        DOCKER_TAG=${GITHUB_REF#refs/tags/}
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          docker build -t a00835462/howl_ai:${DOCKER_TAG} -t a00835462/howl_ai:latest ./app
        elif [[ $GITHUB_REF == refs/heads/main || $GITHUB_REF == refs/heads/master ]]; then
          docker build -t a00835462/howl_ai:dev ./app
        fi

    - name: Login to Docker Hub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Push Docker image
      if: github.event_name != 'pull_request'
      run: |
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          DOCKER_TAG=${GITHUB_REF#refs/tags/}
          docker push a00835462/howl_ai:${DOCKER_TAG}
          docker push a00835462/howl_ai:latest
        elif [[ $GITHUB_REF == refs/heads/main || $GITHUB_REF == refs/heads/master ]]; then
          docker push a00835462/howl_ai:dev
        fi

  deploy:
    needs: test-and-build
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    
    steps:
    - name: Deploy to production
      run: |
        echo "Add your deployment steps here"
        # Example: SSH into server and pull/restart containers
        # - Use secrets.DEPLOY_SSH_KEY for authentication
        # - Use docker-compose pull && docker-compose up -d
